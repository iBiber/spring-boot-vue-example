<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.github.ibiber.spring-boot-vue-example</groupId>
        <artifactId>spring-boot-vue-example</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>vue-ui</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <build>
        <plugins>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.12.0</version>
                <configuration>
                    <nodeVersion>v14.17.6</nodeVersion>
                </configuration>
                
                <executions>
                    <!-- In which order the phases are executed during a maven build,
                        see https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Lifecycle_Reference -->
                    <!-- Install node in a working directory for the default lifecycle if it was not installed before -->
                    <execution>
                        <id>install node and npm</id>
                        <goals><goal>install-node-and-npm</goal></goals>
                        <phase>validate</phase>
                    </execution>

                    <execution>
                        <id>npm install</id>
                        <goals><goal>npm</goal></goals>
                        <phase>initialize</phase>
                           <!-- npm ci is similar to npm install, except it's meant to be used in automated environments such as test platforms, continuous integration, and deployment.
                            Especially it will never write to package.json or any of the package-locks: installs are essentially frozen.
                            See also https://docs.npmjs.com/cli/v6/commands/npm-ci -->
                        <configuration><arguments>ci</arguments></configuration>
                    </execution>

                    <!-- (Optional) The following will output the npm configuration -->
                    <execution>
                        <id>npm print config list </id>
                        <goals><goal>npm</goal></goals>
                        <phase>initialize</phase>
                        <configuration><arguments>config list</arguments></configuration>
                    </execution>

                    <execution>
                        <id>npm unit test</id>
                        <goals><goal>npm</goal></goals>
                        <phase>test</phase>
                        <configuration><arguments>run test:unit</arguments></configuration>
                    </execution>

                    <execution>
                        <id>npm build</id>
                        <goals><goal>npm</goal></goals>
                        <phase>compile</phase>
                        <!-- Note: The build script will clean the target folder -->
                        <configuration><arguments>run build</arguments></configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
